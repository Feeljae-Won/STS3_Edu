<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zerock.air.mapper.AirMapper">

	<!-- id 는 메소드 이름과 같아야 한다. -->
	<select id="searchList" resultType="org.zerock.air.vo.AirVO">
	    select 
	        a.countryCode, a.airportCode, a.airportEng, a.airportKor, c.countryKor, c.countryEng, c.pan
	    from
	        airport a, country c
	    where
	        a.countryCode = c.countryCode
	        and
	        (
	            a.airportCode like '%' || #{searchAirport} || '%'
	            or a.airportKor like '%' || #{searchAirport} || '%'
	            or a.airportEng like '%' || #{searchAirport} || '%'
	            or c.countryKor like '%' || #{searchAirport} || '%'
	            or c.countryEng like '%' || #{searchAirport} || '%'
	        )
	</select>
	
	<!-- 항공권 검색 결과 -->
	<select id="searchResult" resultType="org.zerock.air.vo.AirVO">
		SELECT 
		    m.photo, 
		    al.airlineKor, 
		    ar.departure, 
		    dep_airport.airportKor AS departureKor, 
		    ar.arrival, 
		    arr_airport.airportKor AS arrivalKor, 
		    aopt.flightName,
		    EXTRACT(DAY FROM ash.duration) || '일 ' || 
		    EXTRACT(HOUR FROM ash.duration) || '시간 ' || 
		    EXTRACT(MINUTE FROM ash.duration) || '분 ' AS duration,
		    ash.ScheduleId, 
		    ash.status, 
		    TO_CHAR(ash.departureTime, 'hh24:mm') AS departureTime, 
		    TO_CHAR(ash.arrivalTime, 'hh24:mm') AS arrivalTime, 
		    (SELECT SUM(basePrice + tax + fuelSurCharge + bookingFee) 
		     FROM airPrice 
		     WHERE routeId = 1) AS totalPrice 
		FROM member m
		    JOIN airline al ON m.id = al.id
		    JOIN airplaneOpt aopt ON al.airlineNo = aopt.airLineNo
		    JOIN airSchedule ash ON (aopt.flightName = ash.flightName AND al.airlineNo = ash.airlineNo)
		    JOIN airRoute ar ON ar.routeId = ash.routeID
		    JOIN airport dep_airport ON dep_airport.airportCode = ar.departure
		    JOIN airport arr_airport ON arr_airport.airportCode = ar.arrival
		WHERE 
			(
		    ar.departure = #{departure} 
		    AND ar.arrival = #{arrival}
		    AND TRUNC(ash.departureTime) = #{departureTime}
		    )
		order by departureTime asc
	</select>
	
	<!-- 대륙별 국가 리스트 -->
	<select id="nocList" resultType="org.zerock.air.vo.AirVO">
		select 
			countryCode, CountryEng, CountryKor, Pan 
		from 
			country 
		where
			pan = #{pan}
	</select>
	
	<!-- 카테고리 대분류 등록 -->
	<insert id="nocWrite">
	    INSERT INTO country(countryCode, countryKor, countryEng, pan)
	    VALUES(
	    	#{countryCode}, #{countryKor}, #{countryEng}, #{pan}
	    )
 	</insert>

	<!-- 카테고리 수정 -->
	<update id="update">
	<![CDATA[
		update country
		set countryKor = #{countryKor}, countryEng = #{countryEng}, pan = #{pan}
		where countryCode = #{countryCode}
	]]>
	</update>

	<!-- 카테고리 삭제 -->
	<delete id="delete">
		delete from category
		where cate_code1 = ${cate_code1}
		<if test="cate_code2 != 0">
			and cate_code2 = #{cate_code2}
		</if>
	</delete>
	
	<!-- 국가별 공항 리스트 가져오기 -->
	<select id="getAirport" resultType="org.zerock.air.vo.AirVO">
		select a.countryCode, c.countryKor, c.countryEng, a.AirportCode, a.airportKor, a.airportEng
		from country c, airport a
		where a.countryCode = #{countryCode}
		    and a.countryCode = c.countryCode
    </select>
    
    <!-- 국가별 공항 리스트 가져오기 -->
	<select id="getAirplane" resultType="org.zerock.air.vo.AirVO">
		select airplaneId, airplanePdt, seatCapacity, seatX, seatY
		from airplane
		where airplanePdt = #{airplanePdt}
    </select>
    
    <!-- 항공사 기종 리스트 -->
    <select id="flightList" resultType="org.zerock.air.vo.AirVO">
    	select rnum, flightName, airplaneId, airplanepdt, seatCapacity, ecoCnt, precoCnt,
		        bisCnt, fstCnt, scheduleid, routeId, departure, arrival, airlineno
		from (
		    select rownum rnum, flightName, airplaneId, airplanepdt, seatCapacity, ecoCnt, precoCnt,
		        bisCnt, fstCnt, scheduleid, routeId, departure, arrival, airlineno
		    from (
		        select  aopt.flightName, aopt.airplaneId, ap.airplanepdt, ap.seatCapacity, aopt.ecoCnt, aopt.precoCnt, 
		            aopt.bisCnt, aopt.fstCnt, asch.scheduleid, asch.routeId, ar.departure, ar.arrival, aopt.airlineno
		        from airplaneOpt aopt, airplane ap, airschedule asch, airroute ar
		        where aopt.airlineno = #{airlineNo}
		            and aopt.airlineno = asch.airlineno
		            and aopt.airplaneId = ap.airplaneId
		            and asch.flightName = aopt.flightName
		            and asch.routeId = ar.routeId
		        order by flightName desc
		    )
		)
		where rnum between #{pageObject.startRow} and #{pageObject.endRow}
    </select>
    
    <!-- 전체 데이터 가져오기 -->
    <select id="getTotalRow" resultType="Long">
		select count(*) from airplaneOpt where airlineno = #{airlineNo}
	</select>
		
	
</mapper>